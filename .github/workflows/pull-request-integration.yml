name: pull-request-integration

on:
  pull_request_target:
    branches: [ main ]

env:
  NAMESPACE: community
  COLLECTION_NAME: healthchecksio

concurrency:
  group: cloud-integration-tests
  cancel-in-progress: false

jobs:

  approve:
    name: approve
    runs-on: ubuntu-latest
    steps:
      - name: approve
        run: echo All pull requests need to be approved before running the integration tests.

  secret:
    name: secret
    needs: [ approve ]
    environment: integration
    runs-on: ubuntu-latest
    steps:
      - name: Write secret
        shell: bash
        run: echo "export HEALTHCHECKSIO_API_TOKEN='${{ secrets.HEALTHCHECKSIO_API_TOKEN }}'" >secret
      - name: Upload secret
        uses: actions/upload-artifact@v2
        with:
          name: secret
          path: secret
          retention-days: 0

  integration:
    runs-on: ubuntu-latest
    needs: [ secret ]
    name: I (â’¶${{ matrix.ansible }}+py${{ matrix.python }})
    strategy:
      fail-fast: false
      max-parallel: 1  # avoid race conditions
      matrix:
        ansible:
          # - stable-2.9 # Only if your collection supports Ansible 2.9
          - stable-2.10
          - stable-2.11
          - devel
        python:
          - 2.6
          - 2.7
          - 3.5
          - 3.6
          - 3.7
          - 3.8
          - 3.9
        exclude:
          # Because ansible-test doesn't support python3.9 for Ansible 2.9
          - ansible: stable-2.9
            python: 3.9

    steps:

      - name: Download secret
        uses: actions/download-artifact@v2
        with:
          name: secret

      - name: Check out code
        uses: actions/checkout@v2
        with:
          path: ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}
          ref: ${{ github.event.pull_request.head.sha }} # Check out the pull request

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          # it is just required to run that once as "ansible-test integration" in the docker image
          # will run on all python versions it supports.
          python-version: 3.8

      - name: Install ansible-base (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      # OPTIONAL If your integration test requires Python libraries or modules from other collections
      # Install them like this
      - name: Install collection dependencies
        run: ansible-galaxy collection install ansible.netcommon -p .

      - name: Configure integration test run secrets
        run: |
          source ../../../secret
          ./tests/utils/render.sh \
            ./tests/integration/integration_config.yml.template \
              > ./tests/integration/integration_config.yml
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      # Run the integration tests
      - name: Run integration test
        run: ansible-test integration -v --color --retry-on-error --continue-on-error --diff --python ${{ matrix.python }} --docker --coverage
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

        # ansible-test support producing code coverage date
      - name: Generate coverage report
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version
        working-directory: ./ansible_collections/${{env.NAMESPACE}}/${{env.COLLECTION_NAME}}

      # See the reports at https://codecov.io/gh/GITHUBORG/REPONAME
      - uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: false
